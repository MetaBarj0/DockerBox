# This provider is the only one supported, do not change
# default : virtualbox
VAGRANT_DEFAULT_PROVIDER=virtualbox

# Extra vagrant plugins to install for this machine
# list : plugin names separated by spaces
# default :
VAGRANT_EXTRA_PLUGINS=


# hostname of the machine
# string : a valid hostname for the machine
# default : docker-box
MACHINE_HOSTNAME=docker-box

# Virtual cpu count
# range : from 1 to the logical CPU count on the host
# default : 1
MACHINE_CPU=1

# CPU execution cap.
# range : from 1 to 100
# default : 100
MACHINE_CPU_CAP=100

# Reserved RAM for the VM in megabytes
# range : from 512 to dependent of your host
# default : 1024
MACHINE_MEM=1024

# Forwarding rules allowing packet redirections from host to guest
# string : formatted this way: each rule separated by a semicolon, each element
#          of the rule separated by space.
#          rule;rule;rule
#          With a rule containing 3 properties, a host port, a guest port and
#          a protocol :
#          host_port1 guest_port1 protocol1;host_port2 guest_port2 protocol2;
#          Host and guest ports are valid port numbers between 0 and 65535,
#          protocol being either tcp or udp
# default :
# example : "8080 80 tcp;3307 3306 tcp"
MACHINE_FORWARDED_PORTS=

# Create a public network, aka a bridged network allowing another machine on the bridged
# network to communicate with this machine
# number : 1 connect this machine to a bridged network, making it reachable, 0
# do not create a public_network
# default : 0
# warning : in multi machine mode, this setting is not working properly due to
# a bug in Vagrant preventing machine to boot. As a workaround you can add the
# public network on the machine manually using hypervisor features.
MACHINE_CREATE_PUBLIC_NETWORK=0

# synchronized folders to map between the host and the VM.
# string : formatted this way: each synchronized folder definition are
#          separated by a semicolon, each element of the synchronized folder is
#          separated by a space.
#          sync_folder;sync_folder;sync_folder
#          With a sync_folder containing 2 properties: a source folder located on the
#          host and a target folder located on the VM :
#          ../test /test;../../meh /root/meh
# default :
# example : ../test /test;root /root
MACHINE_SYNCED_FOLDERS=

# configure the time zone region
# string : region name
# default : UTC
ZONEINFO_REGION=UTC

# configure the time zone city
# string : city name
# default :
ZONEINFO_CITY=

# configure the keymap
# string : the keymap name to use
# default : us
KEYMAP='us'

# configure the keymap variant
# string : the keymap variant name to use
# default : us
KEYMAP_VARIANT='us'

# configure the extra packages to install on the guest VM
# list : a list of package groups or names, separated by spaces
# default :
EXTRA_PACKAGES=

# configure the automatic extension of the docker volume.
# number : 1 to enable docker volume auto extension, 0 to disable docker volume
# extension
# default : 1
# note : when this feature is enabled, docker volume can be extended as soon as
# you add and/or resize a virtual disk in your vm using hypervisor facilities
DOCKER_VOLUME_AUTO_EXTEND=1

# WARNING this setting contain a SENSIBLE information, use with caution
# This variable will hold your secret ssh key. If set, this variable's value
# will be used to create a id_rsa file in the
# /home.docker/.ssh directory.
# string : a secret ssh key
# default :
# note : the file /home/docker/.ssh/id_rsa file will be created only if you
# specify a public ssh key in the SSH_PUBLIC_KEY variable
SSH_SECRET_KEY=

# WARNING this setting contain a SENSIBLE information, use with caution
# This variable will hold your public ssh key. If set, this variable's value
# will be used to create a id_rsa.pub file in the
# /home.docker/.ssh directory.
# string : a public ssh key
# default :
# note : the file /home/docker/.ssh/id_rsa.pub file will be created only if you
# specify a secret ssh key in the SSH_SECRET_KEY variable
SSH_PUBLIC_KEY=

# Indicates if the multi machine mode is enabled. Multi machine mode allow
# several VM to be created and run from a single Vagrant project. Each machine
# will be provided the same amount of resource (cpu, cpu cap and memory) as
# specified in MACHINE_CPU, MACHINE_CPU_CAP and MACHINE_MEM variables. By
# default this mode is disabled as the value of this variable is defaulted to
# empty value. To enable the multi machine mode, at least 2 IP address must be
# specified, separated by a space character
# list : a set of IP address, separated by spaces
# default :
# note : an empty list means the multi machine mode is disabled. Specifying
# only 1 IP address means a normal machine setup
# warning : at least 2 IP address must be specified for a valid multi machine
# setup
MULTI_MACHINES=

# Indicates if each machine of a multi machine mode have its own public
# network, aka bridged network, allowing other machines on the same network to
# communicate with them
# number : 1 to create a public network for each machine, 0 otherwise
# default : 0
# note : if the value of the MULTI_MACHINES_CREATE_PUBLIC_NETWORK is 0, no
# public network will be created for each machine in the multi machine setup
# warning : currently unsupported. It looks like a bug in vagrant prevent this
# setting to work at all and prevent the multi machine setup to work.
MULTI_MACHINES_CREATE_PUBLIC_NETWORK=0

# Indicates if each machine of a multi machine setup share same synced folders
# specified in the MACHINE_SYNCED_FOLDERS variable.
# number : 1 to share synced folder specified in MACHINE_SYNCED_FOLDERS
# variable. 0 to not share any synced folder
# default : 0
MULTI_MACHINES_SHARE_SYNCED_FOLDERS=0
